# Generated by script version: 0.3 2010-10-19
# ---------- included from headerfilename.h ----------

#****************************************************************************
# NXP SCT state machine
# Generated by Red State state machine generator by 
# Code Red Technologies 
#
# Description:
#   This include file is used for the SCT state machine code generator.
#
#****************************************************************************

# Define the capabilities of the SCT block
STATES 32;
OUTPUTS 16;
INPUTS 8;
EVENTS 16;

# Assign input/output names to physical I/O numbers

ASSIGN OUTPUT CTOUT0 2;
ASSIGN OUTPUT CTOUT1 3;
ASSIGN OUTPUT CTOUT2 4;
ASSIGN OUTPUT CTOUT3 5;
ASSIGN OUTPUT JUMP_SIGNAL 6;

# ---------- include end ----------

OUTPUT CTOUT0;
OUTPUT CTOUT1;
OUTPUT CTOUT2;
OUTPUT CTOUT3;
OUTPUT JUMP_SIGNAL;

MODE SPLIT;


MATCH_COND jumpTimeout COMPARE H WITH {jumpPeriodValue};
MATCH_COND toggleTimeout COMPARE L WITH {togglePeriodValue};

DEFINE STATE LOW L_ENTRY;
DEFINE STATE HIGH H_ENTRY;
DEFINE STATE LOW CTOUT0_toggle;
DEFINE STATE LOW CTOUT1_toggle;
DEFINE STATE LOW CTOUT2_toggle;
DEFINE STATE LOW CTOUT3_toggle;

RESETSTATE LOW L_ENTRY;
RESETSTATE HIGH H_ENTRY;

DEFINE EVENT LOW trans0;
EVENT trans0 MATCH toggleTimeout;
EVENT trans0 SETS (CTOUT0);
EVENT trans0 CLEARS (CTOUT0);
EVENT trans0 SETS (CTOUT1);
EVENT trans0 CLEARS (CTOUT1);
EVENT trans0 SETS (CTOUT2);
EVENT trans0 CLEARS (CTOUT2);
EVENT trans0 SETS (CTOUT3);
EVENT trans0 CLEARS (CTOUT3);
EVENT trans0 L_LIMIT;
EVENT trans0 STATE (L_ENTRY);
EVENT trans0 JUMPS (L_ENTRY);
DEFINE EVENT LOW trans1;
EVENT trans1 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT trans1 SETS (CTOUT0);
EVENT trans1 SETS (CTOUT1);
EVENT trans1 SETS (CTOUT2);
EVENT trans1 SETS (CTOUT3);
EVENT trans1 CLEARS (JUMP_SIGNAL);
EVENT trans1 STATE (L_ENTRY);
EVENT trans1 JUMPS (CTOUT0_toggle);
DEFINE EVENT HIGH trans2;
EVENT trans2 MATCH jumpTimeout;
EVENT trans2 SETS (JUMP_SIGNAL);
EVENT trans2 L_LIMIT;
EVENT trans2 H_LIMIT;
EVENT trans2 STATE (H_ENTRY);
EVENT trans2 JUMPS (H_ENTRY);
DEFINE EVENT LOW trans3;
EVENT trans3 MATCH toggleTimeout;
EVENT trans3 SETS (CTOUT0);
EVENT trans3 CLEARS (CTOUT0);
EVENT trans3 L_LIMIT;
EVENT trans3 STATE (CTOUT0_toggle);
EVENT trans3 JUMPS (CTOUT0_toggle);
DEFINE EVENT LOW trans4;
EVENT trans4 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT trans4 SETS (CTOUT0);
EVENT trans4 SETS (CTOUT1);
EVENT trans4 SETS (CTOUT2);
EVENT trans4 SETS (CTOUT3);
EVENT trans4 CLEARS (JUMP_SIGNAL);
EVENT trans4 STATE (CTOUT0_toggle);
EVENT trans4 JUMPS (CTOUT1_toggle);
DEFINE EVENT LOW trans5;
EVENT trans5 MATCH toggleTimeout;
EVENT trans5 SETS (CTOUT1);
EVENT trans5 CLEARS (CTOUT1);
EVENT trans5 L_LIMIT;
EVENT trans5 STATE (CTOUT1_toggle);
EVENT trans5 JUMPS (CTOUT1_toggle);
DEFINE EVENT LOW trans6;
EVENT trans6 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT trans6 SETS (CTOUT0);
EVENT trans6 SETS (CTOUT1);
EVENT trans6 SETS (CTOUT2);
EVENT trans6 SETS (CTOUT3);
EVENT trans6 CLEARS (JUMP_SIGNAL);
EVENT trans6 STATE (CTOUT1_toggle);
EVENT trans6 JUMPS (CTOUT2_toggle);
DEFINE EVENT LOW trans7;
EVENT trans7 MATCH toggleTimeout;
EVENT trans7 SETS (CTOUT2);
EVENT trans7 CLEARS (CTOUT2);
EVENT trans7 L_LIMIT;
EVENT trans7 STATE (CTOUT2_toggle);
EVENT trans7 JUMPS (CTOUT2_toggle);
DEFINE EVENT LOW trans8;
EVENT trans8 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT trans8 SETS (CTOUT0);
EVENT trans8 SETS (CTOUT1);
EVENT trans8 SETS (CTOUT2);
EVENT trans8 SETS (CTOUT3);
EVENT trans8 CLEARS (JUMP_SIGNAL);
EVENT trans8 STATE (CTOUT2_toggle);
EVENT trans8 JUMPS (CTOUT3_toggle);
DEFINE EVENT LOW trans9;
EVENT trans9 MATCH toggleTimeout;
EVENT trans9 SETS (CTOUT3);
EVENT trans9 CLEARS (CTOUT3);
EVENT trans9 L_LIMIT;
EVENT trans9 STATE (CTOUT3_toggle);
EVENT trans9 JUMPS (CTOUT3_toggle);
DEFINE EVENT LOW trans10;
EVENT trans10 MATCH OUTPUT (JUMP_SIGNAL) RISE;
EVENT trans10 SETS (CTOUT3);
EVENT trans10 CLEARS (JUMP_SIGNAL);
EVENT trans10 STATE (CTOUT3_toggle);
EVENT trans10 JUMPS (L_ENTRY);

