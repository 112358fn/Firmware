/**********************************************************************
* $Id$		abstract.txt		2012-04-19
*//**
* @file		abstract.txt
* @brief	Example description file
* @version	1.1
* @date		19. Apr. 2012
* @author	NXP MCU SW Application Team
*
* Copyright(C) 2012, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
* Permission to use, copy, modify, and distribute this software and its
* documentation is hereby granted, under NXP Semiconductors'
* relevant copyright in the software, without fee, provided that it
* is used in conjunction with NXP Semiconductors microcontrollers.  This
* copyright, permission, and disclaimer notice must appear in all copies of
* this code.
**********************************************************************/
  
@Example description:
	Purpose:
		This example describes how to use I2S to transfer audio data through I2S port
		to play a short music sound in a loop.

	Process:

		To run on ex flash, be careful on setting Core Clock which will relate to Flash Timing
		I2S setup:
			- wordwidth: 16 bits
			- stereo mode
			- master mode for TX
			- frequency = 48Khz (maximum is 96kHz)
      - enable transmit interrupt mode
      - Irq TXFIFO depth = 4

    Audio data will be copied in tx_buffer to send to TXFIFO register, after half of 
    buffer have been sent already, call I2S_Callback() function to re-fill data.

@Directory contents:
	\Keil:	includes RVMDK (Keil)project and configuration files 	
	\IAR:	includes IAR project and configuration files
  	audiodata.c: store audio data
	I2s_Audio.c: Main program

@How to run:

	Hardware configuration:		

		This example was tested on:
			Hitex LPC4350 Board
			Hitex LPC1850 Board
			U-Link2 on Keil
			J-Link on IAR
		Boot mode jumper settings:
		+ Hitex Flash:
			Select boot mode jumpers [BOOT4,BOOT3,BOOT2,BOOT1] to [LOW,LOW,HIGH,HIGH]
		+ SPIFI quad SPI flash (SPIFI 64MB and 128MB):
			Select boot mode jumpers [BOOT4,BOOT3,BOOT2,BOOT1] to [LOW,LOW,LOW,HIGH]
	
	Running mode:
		On Keil
			Internal SRAM mode:	This example can run on Internal SRAM mode.
						All files must be build to .elf file, this file will be loaded into Internal SRAM through a
						debugger tool before running
			Hitex Flash mode: 	All files must be built to .hex file before burn into flash
				+ This example can be run on external flash:
					* SST39X320X:
						- Burn by Keil's Load feature:
							a) Copy all things in ..\..\..\Tools\Flash\Keil_Binaries to
							   C:\Keil\ARM\Flash (Keil uVision 4)
							b) Open Keil->Configure for flash compiling->Compile->Select debugger->Press LOAD 						
					SPIFI 64MB Debug mode:
				+ This example can be run on external SPIFI flash:
						- Burn by Keil's Load feature:
							a) Copy all things in ..\..\..\Tools\Flash\Keil_Binaries to
							   C:\Keil\ARM\Flash (Keil uVision 4)
							b) Open Keil->Configure for flash compiling->Compile->Select debugger->Press LOAD 
					SPIFI 128MB mode:
				+ This example can be run on external SPIFI flash:
						- Burn by Keil's Load feature:
							a) Copy all things in ..\..\..\Tools\Flash\Keil_Binaries to
							   C:\Keil\ARM\Flash (Keil uVision 4)
							b) Open Keil->Configure for flash compiling->Compile->Select debugger->Press LOADs 						

		On IAR
			Built the project (F7)
			Internal SRAM mode: This example can run on Internal SRAM.
				Download and debug (CTRL + D)
				Seclect Device Cortex M4 (if any)
			Hitex Flash mode: This example can run on 
				Hitex Flash (SST39X320X external parallel flash):
					Select "Project->Download->Download active application" to burn into flash
				SPIFI quad SPI flash 128MB mode:
					Select "Project->Download->Download active application" to burn into flash
				SPIFI quad SPI flash 64MB Debug mode:
					Download and debug (CTRL + D)
	Step to run:

		- Step 1: Build example.
		- Step 2: Burn hex file into board (if run on ROM mode)
		- Step 4: Configure hardware as above instruction 
		- Step 5: Run example and hear the loopback sound via headphones
@Tip:
	- Open \Keil\*.uvproj project file to run example on Keil		
	- Open \EWARM\*.eww project file to run example on IAR