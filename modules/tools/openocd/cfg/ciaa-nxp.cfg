######################################################################################################
# Utilizar una interface tipo FTDI, todo lo que sigue está basado en ello
######################################################################################################
interface ftdi

######################################################################################################
# Agrego el Par VID-PID del FTDI, si hay más agregar a continuación...
######################################################################################################
ftdi_vid_pid 0x0403 0x6010

######################################################################################################
# Se utilizó el Channel A (ADBUS0 a ADBUS3) para conectar el JTAG mediante MPSSE
######################################################################################################
ftdi_channel 0

######################################################################################################
# ftdi_layout_init 'Valor' 'Dirección', Configura los GPIO (H-L), su valor y dirección en ese orden(1 = Salida, 0 = entrada)
# los 16 bits se arman H-L como sigue 'ACBUS7-0+ADBUS7-0'
#ADBUS0 = FT_CLCK = 1, salida de Clock
#ADBUS1 = FT_TDI = 1, salida de datos del FT
#ADBUS2 = FT_TDO = 0, entrada de datos al FT
#ADBUS3 = FT_TMS = 1, salida de Test Mode Select, setear a 1
#ADBUS4 = Pin 14 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ADBUS5 = Pin 12 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ADBUS6 = Pin 10 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ADBUS7 = Pin 8 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ACBUS0 = FT_TRST = 1, salida de TRST...va al buffer y luego no se usa
#ACBUS1 = FT_RST = 1, salida de RST...va al buffer y luego no se usa
#ACBUS2 = FT_OE = 1, salida de OE para manejar el Buffer del JTAG, setear a 1
#ACBUS3 = Pin 6 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ACBUS4 = Pin 4 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ACBUS5 = Pin 2 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ACBUS6 = Pin 1 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
#ACBUS7 = Pin 3 - conector P9 = 1 salida para no dejar flotante e ingresar ruido al FT
######################################################################################################
ftdi_layout_init 0x0708 0xFFFB

######################################################################################################
# La creación de las señales que siguen no hacen falta porque se indicó en el Target cfg que no se
# las tiene conectadas a ningún lado
######################################################################################################

######################################################################################################
# Creo la señal llamada nTRST (Not TAP Reset) que es una tipo dato, y usa el bit 8 del GPIO (H-L), es
# decir GPIOH0 (pin ACBUS0) por eso 0x100, y a la vez se activa conjuntamente con el OE que 
# está usado en el bit 10 del GPIO, es decir, en GPIOH2 (pin ACBUS2) por eso 0x400
######################################################################################################
ftdi_layout_signal nTRST -data 0x0100 
# -oe 0x0400

######################################################################################################
# Creo la señal llamada nSRST (Not System Reset) que se activa cuando se hace un cmd 'reset'
# Es tipo dato y usa el bit 9 del GPIO (H-L), es decir GPIOH1 (pin ACBUS1) por eso 0x200, 
# y a la vez se activa conjuntamente con el OE que  está usado en el bit 10 del GPIO, es decir,
# en GPIOH2 (pin ACBUS2) por eso 0x400
######################################################################################################
####ftdi_layout_signal nSRST -data 0x0200 -oe 0x0800

################################################################
# Especifica en KHz la frecuencia del Clock en el JTAG (TCK)
################################################################
adapter_khz 500

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME lpc4337
}

#
# M4 JTAG mode TAP
#
if { [info exists M4_JTAG_TAPID] } {
	set _M4_JTAG_TAPID $M4_JTAG_TAPID
} else {
	set _M4_JTAG_TAPID 0x4ba00477
}

#
# M4 SWD mode TAP
#
if { [info exists M4_SWD_TAPID] } {
	set _M4_SWD_TAPID $M4_SWD_TAPID
} else {
	set _M4_SWD_TAPID 0x2ba01477
}

#
# M0 TAP
#
if { [info exists M0_JTAG_TAPID] } {
	set _M0_JTAG_TAPID $M0_JTAG_TAPID
} else {
	set _M0_JTAG_TAPID 0x0ba01477
}

jtag newtap $_CHIPNAME m4 -irlen 4 -ircapture 0x1 -irmask 0xf \
				-expected-id $_M4_JTAG_TAPID

jtag newtap $_CHIPNAME m0 -irlen 4 -ircapture 0x1 -irmask 0xf \
				-expected-id $_M0_JTAG_TAPID

target create $_CHIPNAME.m4 cortex_m -chain-position $_CHIPNAME.m4
target create $_CHIPNAME.m0 cortex_m -chain-position $_CHIPNAME.m0

set _WORKAREASIZE 0x8000
$_CHIPNAME.m4 configure -work-area-phys 0x10000000 -work-area-size $_WORKAREASIZE 

# The LPC17xx devies have 32/64/128/256/512kB of flash memory, managed by ROM code
# (including a boot loader which verifies the flash exception table's checksum).
# flash bank <name> lpc2000 <base> <size> 0 0 <target#> <variant> <clock> [calc checksum]
set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME lpc2000 0x1a000000 0x80000 0 0 $_CHIPNAME.m4 \
	lpc4300 96000 calc_checksum

################################################################
# TRST (TAP Reset) y SRST (System Reset) no están conectados más allá del Buffer...!!!??? 
# Por lo tanto se indica debería indicar 'none', sin embargo se usa
# cortex_m reset_config vectreset
# que le da los siguientes valores por defecto
# srst_only separate srst_nogate srst_open_drain connect_deassert_srst
################################################################
# on this CPU we should use VECTRESET to perform a soft reset and
# manually reset the periphery
# SRST or SYSRESETREQ disable the debug interface for the time of
# the reset and will not fit our requirements for a consistent debug
# session
cortex_m reset_config vectreset


reset_config trst_only trst_push_pull separate

