# Generated by script version: 0.3 2010-10-19
# ---------- included from headerfilename.h ----------

#****************************************************************************
# NXP SCT state machine
# Generated by Red State state machine generator by 
# Code Red Technologies 
#
# Description:
#   This include file is used for the SCT state machine code generator.
#
#****************************************************************************

# Define the capabilities of the SCT block
STATES 32;
OUTPUTS 16;
INPUTS 8;
EVENTS 16;

# Assign input/output names to physical I/O numbers
ASSIGN INPUT CROSS_REQUEST 0;

ASSIGN OUTPUT AUTO_CROSS 6;
ASSIGN OUTPUT BLUE_N 4;
ASSIGN OUTPUT GREEN_N 2;
ASSIGN OUTPUT RED_N 3;
ASSIGN OUTPUT REQUEST 5;

# ---------- include end ----------
INPUT CROSS_REQUEST;

OUTPUT AUTO_CROSS;
OUTPUT BLUE_N HIGH;
OUTPUT GREEN_N LOW;
OUTPUT RED_N HIGH;
OUTPUT REQUEST LOW;

MODE SPLIT;


MATCH_COND cross_timeout COMPARE H WITH {cross_timeout_value};
MATCH_COND pedestrian_stop COMPARE L WITH {pedestrian_stop_value};
MATCH_COND pedestrian_walk COMPARE L WITH {pedestrian_walk_value};
MATCH_COND red_off COMPARE L WITH {red_off_value};
MATCH_COND red_on COMPARE L WITH {red_on_value};
MATCH_COND yellow_off COMPARE L WITH {yellow_off_value};
MATCH_COND yellow_on COMPARE L WITH {yellow_on_value};

DEFINE STATE LOW L_ENTRY;
DEFINE STATE HIGH H_ENTRY;
DEFINE STATE LOW GREEN_ON_State;
DEFINE STATE LOW YELLOW_ON_State;
DEFINE STATE LOW RED_ON_State;
DEFINE STATE LOW WALK_State;

RESETSTATE LOW L_ENTRY;
RESETSTATE HIGH H_ENTRY;

DEFINE EVENT LOW trans0;
EVENT trans0 MATCH INPUT (CROSS_REQUEST) RISE;
EVENT trans0 L_LIMIT;
EVENT trans0 SETS (REQUEST);
EVENT trans0 CLEARS (GREEN_N);
EVENT trans0 STATE (L_ENTRY);
EVENT trans0 JUMPS (GREEN_ON_State);
DEFINE EVENT LOW trans1;
EVENT trans1 MATCH OUTPUT (AUTO_CROSS) RISE;
EVENT trans1 CLEARS (GREEN_N);
EVENT trans1 L_LIMIT;
EVENT trans1 SETS (REQUEST);
EVENT trans1 IRQ crossingTimeout;
EVENT trans1 STATE (L_ENTRY);
EVENT trans1 JUMPS (GREEN_ON_State);
DEFINE EVENT HIGH trans2;
EVENT trans2 MATCH cross_timeout;
EVENT trans2 H_STOP;
EVENT trans2 SETS (AUTO_CROSS);
EVENT trans2 STATE (H_ENTRY);
EVENT trans2 JUMPS (H_ENTRY);
DEFINE EVENT LOW trans3;
EVENT trans3 MATCH yellow_on;
EVENT trans3 L_LIMIT;
EVENT trans3 CLEARS (GREEN_N);
EVENT trans3 CLEARS (RED_N);
EVENT trans3 STATE (GREEN_ON_State);
EVENT trans3 JUMPS (YELLOW_ON_State);
DEFINE EVENT LOW trans4;
EVENT trans4 MATCH red_on AND OUTPUT (REQUEST) HIGH;
EVENT trans4 SETS (GREEN_N);
EVENT trans4 CLEARS (RED_N);
EVENT trans4 L_LIMIT;
EVENT trans4 STATE (YELLOW_ON_State);
EVENT trans4 JUMPS (RED_ON_State);
DEFINE EVENT LOW trans5;
EVENT trans5 MATCH yellow_off AND OUTPUT (REQUEST) LOW;
EVENT trans5 CLEARS (GREEN_N);
EVENT trans5 SETS (RED_N);
EVENT trans5 L_LIMIT;
EVENT trans5 H_LIMIT;
EVENT trans5 H_START;
EVENT trans5 CLEARS (AUTO_CROSS);
EVENT trans5 STATE (YELLOW_ON_State);
EVENT trans5 JUMPS (L_ENTRY);
DEFINE EVENT LOW trans6;
EVENT trans6 MATCH pedestrian_walk AND OUTPUT (REQUEST) HIGH;
EVENT trans6 CLEARS (BLUE_N);
EVENT trans6 CLEARS (RED_N);
EVENT trans6 L_LIMIT;
EVENT trans6 STATE (RED_ON_State);
EVENT trans6 JUMPS (WALK_State);
DEFINE EVENT LOW trans7;
EVENT trans7 MATCH red_off AND OUTPUT (REQUEST) LOW;
EVENT trans7 CLEARS (GREEN_N);
EVENT trans7 CLEARS (RED_N);
EVENT trans7 L_LIMIT;
EVENT trans7 STATE (RED_ON_State);
EVENT trans7 JUMPS (YELLOW_ON_State);
DEFINE EVENT LOW trans8;
EVENT trans8 MATCH pedestrian_stop;
EVENT trans8 SETS (BLUE_N);
EVENT trans8 CLEARS (REQUEST);
EVENT trans8 L_LIMIT;
EVENT trans8 STATE (WALK_State);
EVENT trans8 JUMPS (RED_ON_State);

