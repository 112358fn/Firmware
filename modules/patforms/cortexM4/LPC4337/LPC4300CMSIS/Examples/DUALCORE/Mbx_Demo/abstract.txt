/**********************************************************************
* $Id$		abstract.txt		2011-06-02
*//**
* @file		abstract.txt
* @brief	Example description file
* @version	1.0
* @date		02. June. 2011
* @author	NXP MCU SW Application Team
*
* Copyright(C) 2011, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
* Permission to use, copy, modify, and distribute this software and its
* documentation is hereby granted, under NXP Semiconductors’
* relevant copyright in the software, without fee, provided that it
* is used in conjunction with NXP Semiconductors microcontrollers.  This
* copyright, permission, and disclaimer notice must appear in all copies of
* this code.
**********************************************************************/
  
@Example description:
	Purpose:
		This example demonstrates inter-processor communication between the Cortex-M4
		and Cortex-M0 cores in the LPC4350 CPU.
	Process:
		- M4: Configure Cortex M4 & system clock to 204 MHz
		- M4: Copy Cortex M0 image into ram
		- M4: Start Cortex M0 image
		- M4: Wait for messages
		- M0: Init UART, Start main loop and send / process messages
		- M4: Process messages
		- M0: Process messages
					
@Directory contents:
	\Keil:	includes Keil M0 and M4 project and configuration files  
	\M0:	includes M0 code
	\M4:	includes M4 code

@How to run:
	Hardware configuration:		
		This example was tested on:
			Hitex LPC4350 Board
						
	Step to run:
           - Step 1: Build example. First Build M0 project, then build M4 project. Clicking right
		   over M0/M4 allows selection of the Active Project in the workspace.

	Running mode:

		RAM mode:   This example can be run on RAM mode with debugger. 

		ROM mode: supports booting from external flash of SPIFI

			* SST39X320X:
				
				- Select boot mode jumpers BOOT[4..1] to [LOW,LOW,LOW,LOW]	
				- Burn flash using Keil load feature (load button)
				- Select boot mode jumpers BOOT[4..1] to [LOW,LOW,HIGH,HIGH] to boot from NOR flash
												
			* SPIFI 64Mbit Flash
			 
			 	- Select boot mode jumpers BOOT[4..1] to [LOW,LOW,LOW,LOW]	
				- Burn flash using Keil load feature (load button)
				- Select boot mode jumpers BOOT[4..1] to [LOW,LOW,LOW,HIGH] to boot from SPIFI and reset 						

			* Internal flash mode
			 	- No specific selection needed, device boots from internal flash when a valid image is
					burned in the device (LPC4357 only)
				- Burn flash using Keil load feature (load button)
				
	Step to run:
		- Step 1: Build example.
		- Step 2: Burn hex file into board (if run on ROM mode)
		- Step 3: Configure hardware as above instruction
		- Step 4: Run example and observe two LEDs blinking- one by the M4 core, one by M0 core

		
Memory map RAM mode:
---------------

### 0x10000000 
#
#	M4 Image
#	
### 0x10018000 

### 0x10080000 
#		
#	M0 ROM 32 K	(0x8000)
#	
#-- 0x10087FFF ---
#-- 0x10088000 ---
#		
#	M0 RAM, 8 K	(0x2000)
#
### 0x10089FFF 

### 0x20000000 
#		
#	M4 BUF, 16K	(0x4000)
#
#-- 0x20003FFF ---
#-- 0x20004000 ---
#		
#	M0 BUF, 16K	(0x4000)
#
### 0x20007FFF 

### 0x20008000
#
#	M4 mailbox, 8K (0x2000)
#
#-- 0x20008FFF ---
#-- 0x2000A000 ---
#
#	M0 mailbox, 8K (0x2000)
#
### 0x2000BFFF



Memory map Flash mode:
---------------

### 0x1C000000 
#
#	M4 Image - first 16K of flash
#	
#-- 0x1C003FFF ---
#--	0x1C004000 ---
#
#	M4 Image - rest of 4 MB Flash
#
### 0x1C3FC000

### 0x10000000
#
#	M4 RAM
#
###	0x10017FFF

### 0x10080000 
#		
#	M0 ROM 32 K	(0x8000)
#	
#-- 0x10087FFF ---
#-- 0x10088000 ---
#		
#	M0 RAM, 8 K	(0x2000)
#
### 0x10089FFF 

### 0x20000000 
#		
#	M4 BUF, 16K	(0x4000)
#
#-- 0x20003FFF ---
#-- 0x20004000 ---
#		
#	M0 BUF, 16K	(0x4000)
#
### 0x20007FFF 

### 0x20008000
#
#	M4 mailbox, 8K (0x2000)
#
#-- 0x20008FFF ---
#-- 0x2000A000 ---
#
#	M0 mailbox, 8K (0x2000)
#
### 0x2000BFFF


Memory map SPIFI mode:
---------------

### 0x14000000 
#
#	M4 Image 
#	
#-- 0x143FFFFF ---
#--	0x14400000 ---
#
#	M4 Image 
#
### 0x147FFFFF

### 0x10000000
#
#	M4 RAM
#
###	0x10017FFF

### 0x10080000 
#		
#	M0 ROM 32 K	(0x8000)
#	
#-- 0x10087FFF ---
#-- 0x10088000 ---
#		
#	M0 RAM, 8 K	(0x2000)
#
### 0x10089FFF 

### 0x20000000 
#		
#	M4 BUF, 16K	(0x4000)
#
#-- 0x20003FFF ---
#-- 0x20004000 ---
#		
#	M0 BUF, 16K	(0x4000)
#
### 0x20007FFF

### 0x20008000
#
#	M4 mailbox, 8K (0x2000)
#
#-- 0x20008FFF ---
#-- 0x2000A000 ---
#
#	M0 mailbox, 8K (0x2000)
#
### 0x2000BFFF


Memory map internal FLASH mode:
---------------

### 0x1A000000 
#
#	M4 Image - 512K Flash
#	
### 0x1A07FFFF ---

### 0x1B000000
#
#	M0 Image - 512K Flash
#
### 0x1B07FFFF

### 0x10000000
#
#	M4 RAM 32K 
#
###	0x10007FFF

### 0x10080000 
#		
#	M0 RAM 40 K	
#
### 0x10089FFF 

### 0x20000000 
#		
#	M4 BUF, 16K	(0x4000)
#
#-- 0x20003FFF ---
#-- 0x20004000 ---
#		
#	M0 BUF, 16K	(0x4000)
#
### 0x20007FFF

### 0x20008000
#
#	M4 mailbox, 8K (0x2000)
#
#-- 0x20008FFF ---
#-- 0x2000A000 ---
#
#	M0 mailbox, 8K (0x2000)
#
### 0x2000BFFF
